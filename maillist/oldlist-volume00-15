From - Tue Feb 20 18:08:26 2001
X-UIDL: f4a7152b1c772b9d
X-Mozilla-Status: 0001
X-Mozilla-Status2: 00000000
Return-Path: <general-digest-list-request@onemodel.org>
Delivered-To: lacall-onemodel:org-lacall@onemodel.org
X-Envelope-To: lacall@onemodel.org
Received: (qmail 70450 invoked by uid 800); 20 Feb 2001 14:11:06 -0000
Date: 20 Feb 2001 14:11:06 -0000
Message-ID: <20010220141106.70449.qmail@uruz.pair.com>
To: lacall@onemodel.org
References: <3A927AE2.4010408@onemodel.org>
In-Reply-To: <3A927AE2.4010408@onemodel.org>
X-Loop: general-digest-list@onemodel.org
From: general-digest-list-request@onemodel.org
Reply-To: Please.write.a.new.mail.instead.of.replying@FIRST.WORD.archive
Content-ID: <"volume00/15"%general-digest-list-request@onemodel.org>
Subject: archive retrieval: volume00/15
Precedence: bulk
Content-Disposition: inline; filename="volume00/15"
Content-Type: message/rfc822;
	directory="volume00"; name="15"
MIME-Version: 1.0

From: general-digest-list-request@onemodel.org
Subject: general-digest-list Digest V00 #15
X-Loop: general-digest-list@onemodel.org
X-Mailing-List: <general-digest-list@onemodel.org> archive/volume00/15
Precedence: list
MIME-Version: 1.0
Content-Type: multipart/digest; boundary="----------------------------"
To: general-digest-list@onemodel.org
Reply-To: general-list@onemodel.org

------------------------------

Content-Type: text/plain

general-digest-list Digest				Volume 00 : Issue 15

Today's Topics:
  Re: [Fwd: Modeling Relations -- Re:   [ Mark Butler <butlerm@middle.net> ]
  Re: [Fwd: Modeling Relations -- Re:   [ Lee Howard <redder@deanox.com> ]
  caring -- Re: [Fwd: Modeling Relatio  [ "Tom and other Packers" <TomP@Burgo ]

------------------------------

Date: Tue, 29 Aug 2000 09:52:39 -0600
From: Mark Butler <butlerm@middle.net>
To: Tom and other Packers <TomP@Burgoyne.Com>
CC: general-list@onemodel.org
Subject: Re: [Fwd: Modeling Relations -- Re: use cases]
Message-ID: <39ABDC47.B623FF6B@middle.net>
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit

Okay, say you enforce the rule that any two nodes can only have one geometric
relationship "internode" between them, and then presumably a present tense
characteristic like "really likes" could be a component of that vector
relationship.  The problem is that this particular component may only exist
from one person's perspective and may be part of a complex conditional
expression of belief, so we still need a full linguistic system to express
when and why and how a particular component of a particular relationship
vector has a given value.

There is a natural decision that needs to be made, and that is whether to
design the whole system in terms of "nodes" and "internodes" down to the
lowest level, or whether to work on a more general framework.  I have been
trying to persuade the group that the latter is preferable and that the
software could then be used in several contexts, including as a Mathesis proof
of concept.

If it is to be the former, then the burden is upon Tom to come up with a
complete and documented data model of all the record types needed to represent
reasonably arbitrary forms of knowledge.  I can understand why Tom does not
want to make arbitrary sentences into internodes, but the real point is that
is is not yet obvious how else we would represent them.  This is why I prefer
a system that lets you put in knowledge in arbitary forms and then reduce it
to idealized forms later, forms that can evolve and expand with the
development of an ideal representational theory.  

  - Mark


Tom and other Packers wrote:
> 
> Mark
> 
>     First potential problem: I have not given any reason to believe that
> internodes are verbs, and vice versa.
> 
>     To be practical, I guess we will have to devise a very abstract,
> symbolic way of translating sentences like "He thinks his girl friend really
> likes him".  But the ideal case would be to break such a sentence down into
> very concrete relations, geometries if you will, and that would look nothing
> like what Mark has done, e.g. "thinks( he, really_likes( girlfriend,
> him ) )".
> 
>     I'll have to talk about this later.
> 
> tomp
> 
> ----- Original Message -----
> From: Mark Butler <butlerm@middle.net>
> To: Lee Howard <redder@deanox.com>
> Cc: <general-list@onemodel.org>
> Sent: Monday, August 28, 2000 12:04 AM
> Subject: Re: [Fwd: Modeling Relations -- Re: use cases]
> 
> Lee Howard wrote:
> >
> > Mark, could you expound a bit on the usage of nodes as internodes?
> 
> Well, first of all, I do not really understand the details of how nodes and
> internodes and meta-internodes are intended to be used.  All I can say is
> that
> in most symbolic systems, any abstraction of a first class symbol may be
> used
> as another new first class symbol.  In the strict
> "node-internode-meta-internode" system, neither internodes nor
> meta-internodes
> are first class symbols.
> 
> Now a three level system could be ideal for representing distilled truth
> about
> the state of reality, for reasons that Tom has spent a lot of time
> considering, but I think that it is too narrow of an abstraction to
> represent
> the views of others in a form completely faithful to the original text.  My
> recommendation is to start with more abstract data in non-Mathesis form and
> then work on reducing it what I hereby dub Mathesis Normal Form (MNF), much
> like a database analyst would normalize a database design.  The key is that
> a
> data modeling tool does not prevent the designer from starting with a
> denormalized model.
> 
> > In a relational database, (as I understand it, obviously) traditionally
> > things are constructed such that two or more records are related by some
> > given path.  For example points A and B are separated by distance C on a
> line.
> >
> > As I understand your proposal that internodes be a type or use of a node,
> > A, B, and C in the example above C would be treated as a piece of
> > information as much as A and B are, and in a real sense, our relation
> would
> > be that some field A is related to some field B by the manner of field C.
> > Am I correct?
> 
> Roughly, yes - except you should substitute "record" for "field".
> 
> > Therefore, the internodal usage (the "separated by") of this node is a
> > specific quality of that node?  And not all nodes necessarily must also
> > function as internodes?
> 
> Yes.  In my view, an internode is a special kind of generalized node.  Most
> generalized nodes are clearly not internodes. However, I believe a large
> number of internodes should be considered to be nodes as well:
> 
>  "friendship", "similarity", "affinity", "bond"
>  "inclination", "relationship", "association"
>  "difference", "distance", "separation", "offset"
>  "temperature", "altitude", "elevation"
> 
> I can speak of "friendship" as a "node", e.g. "friendship" in "I like
> friendship"
> I can also speak of friendship as an "internode", e.g. the friendship
> between
> Jack and Jill.
> 
> As far as I can tell, the latter is an instance or sub-class of the former,
> i.e. the "internode" is an instance or sub-class of the "node".
> 
> How about the sentence:  "He thinks his girlfriend really likes him"
> 
> We have two obvious nodes:  "He" and "his girlfriend"
> We also have an obvious internode: really_likes(girlfriend,him)
> 
> But then we have a problem:  thinks(he,really_likes(girlfriend,him)) is
> supposed to be another internode, but the second argument, the object of the
> verb thinks, is already an internode, which is disallowed because all
> internodes must relate two nodes.  Clearly thinks(...) cannot be a
> meta-internode either because then "he" would have to be a internode instead
> of a plain old node.
> 
> Again, the solution is to promote the internode really_likes(...,...) to
> full
> node-hood without giving up its internodal attributes.
> 
> > I'm sure that there is a way, but could you illustrate when you would use
> > what "normally" would be used as an internode also as a node?  For example
> > "separated by distance C" is related to "separated by distance E" by |C-E|
> > (an absolute) ?
> 
> See above for a good example.  Any discourse about an internode treats the
> internode as a node. Key words to watch for are "about", "that", "according
> to", "the statement", "true", and "false".  Without treating some internodes
> as nodes, no meta-discourse (discourse about discourse) can be represented.
> 
> - Mark
> 
> --
> Mark Butler        ( butlerm@middle.net )
> Software Engineer
> Epic Systems
> (801)-451-4583

------------------------------

Date: Wed, 30 Aug 2000 00:58:27 -0600
From: Lee Howard <redder@deanox.com>
To: general-list@onemodel.org
Subject: Re: [Fwd: Modeling Relations -- Re: use cases]
Message-Id: <3.0.6.32.20000830005827.0080d100@server.deanox.com>
Content-Type: text/plain; charset="us-ascii"

Not that I wouldn't mind to disagree with Mark for disagreement's sake.
;-)  (I'm teasing, Mark.)  And not that I really am all too anxious to
disagree with Tom.  (especially after recent lambashings...)  After all, it
is still his project...

But I'm agreeing with Mark on this.  I've agreed with Mark on this before
his earlier explanation.  (I just needed to make sure that I *was*
understanding what he was writing... at least regarding the internode vs.
node dilemma.)

The fundamental data design seems so much more simple to do things this
way, anyway, although I think it may appear to be more complex to those who
have viewed internodes as independent data sets from nodes for so long.
Viewing the data in this manner solves a number of conceptual problems that
I have had for so long in understanding internodes.

(as if anyone cared what I thought anyway...)

Lee.

At 09:52 AM 8/29/00 -0600, Mark Butler wrote:
>Okay, say you enforce the rule that any two nodes can only have one geometric
>relationship "internode" between them, and then presumably a present tense
>characteristic like "really likes" could be a component of that vector
>relationship.  The problem is that this particular component may only exist
>from one person's perspective and may be part of a complex conditional
>expression of belief, so we still need a full linguistic system to express
>when and why and how a particular component of a particular relationship
>vector has a given value.
>
>There is a natural decision that needs to be made, and that is whether to
>design the whole system in terms of "nodes" and "internodes" down to the
>lowest level, or whether to work on a more general framework.  I have been
>trying to persuade the group that the latter is preferable and that the
>software could then be used in several contexts, including as a Mathesis
proof
>of concept.
>
>If it is to be the former, then the burden is upon Tom to come up with a
>complete and documented data model of all the record types needed to
represent
>reasonably arbitrary forms of knowledge.  I can understand why Tom does not
>want to make arbitrary sentences into internodes, but the real point is that
>is is not yet obvious how else we would represent them.  This is why I prefer
>a system that lets you put in knowledge in arbitary forms and then reduce it
>to idealized forms later, forms that can evolve and expand with the
>development of an ideal representational theory.  
>
>  - Mark
>
>
>Tom and other Packers wrote:
>> 
>> Mark
>> 
>>     First potential problem: I have not given any reason to believe that
>> internodes are verbs, and vice versa.
>> 
>>     To be practical, I guess we will have to devise a very abstract,
>> symbolic way of translating sentences like "He thinks his girl friend
really
>> likes him".  But the ideal case would be to break such a sentence down into
>> very concrete relations, geometries if you will, and that would look
nothing
>> like what Mark has done, e.g. "thinks( he, really_likes( girlfriend,
>> him ) )".
>> 
>>     I'll have to talk about this later.
>> 
>> tomp
>> 

------------------------------

Date: Wed, 30 Aug 2000 15:16:43 -0600
From: "Tom and other Packers" <TomP@Burgoyne.Com>
To: <general-list@onemodel.org>
Subject: caring -- Re: [Fwd: Modeling Relations -- Re: use cases]
Message-ID: <003101c012c8$f5286bc0$1906a8c0@oemcomputer>
Content-Type: text/plain;
	charset="iso-8859-1"
Content-Transfer-Encoding: 7bit

Lee

    The only thing I have to disagree with, in this letter from you, Lee, is
the implications of the parenthetical "as if anyone cared what I thought
anyway...".

tomp

----- Original Message -----
From: Lee Howard <redder@deanox.com>
To: <general-list@onemodel.org>
Sent: Wednesday, August 30, 2000 12:58 AM
Subject: Re: [Fwd: Modeling Relations -- Re: use cases]


Not that I wouldn't mind to disagree with Mark for disagreement's sake.
;-)  (I'm teasing, Mark.)  And not that I really am all too anxious to
disagree with Tom.  (especially after recent lambashings...)  After all, it
is still his project...

But I'm agreeing with Mark on this.  I've agreed with Mark on this before
his earlier explanation.  (I just needed to make sure that I *was*
understanding what he was writing... at least regarding the internode vs.
node dilemma.)

The fundamental data design seems so much more simple to do things this
way, anyway, although I think it may appear to be more complex to those who
have viewed internodes as independent data sets from nodes for so long.
Viewing the data in this manner solves a number of conceptual problems that
I have had for so long in understanding internodes.

(as if anyone cared what I thought anyway...)

Lee.

At 09:52 AM 8/29/00 -0600, Mark Butler wrote:
>Okay, say you enforce the rule that any two nodes can only have one
geometric
>relationship "internode" between them, and then presumably a present tense
>characteristic like "really likes" could be a component of that vector
>relationship.  The problem is that this particular component may only exist
>from one person's perspective and may be part of a complex conditional
>expression of belief, so we still need a full linguistic system to express
>when and why and how a particular component of a particular relationship
>vector has a given value.
>
>There is a natural decision that needs to be made, and that is whether to
>design the whole system in terms of "nodes" and "internodes" down to the
>lowest level, or whether to work on a more general framework.  I have been
>trying to persuade the group that the latter is preferable and that the
>software could then be used in several contexts, including as a Mathesis
proof
>of concept.
>
>If it is to be the former, then the burden is upon Tom to come up with a
>complete and documented data model of all the record types needed to
represent
>reasonably arbitrary forms of knowledge.  I can understand why Tom does not
>want to make arbitrary sentences into internodes, but the real point is
that
>is is not yet obvious how else we would represent them.  This is why I
prefer
>a system that lets you put in knowledge in arbitary forms and then reduce
it
>to idealized forms later, forms that can evolve and expand with the
>development of an ideal representational theory.
>
>  - Mark
>
>
>Tom and other Packers wrote:
>>
>> Mark
>>
>>     First potential problem: I have not given any reason to believe that
>> internodes are verbs, and vice versa.
>>
>>     To be practical, I guess we will have to devise a very abstract,
>> symbolic way of translating sentences like "He thinks his girl friend
really
>> likes him".  But the ideal case would be to break such a sentence down
into
>> very concrete relations, geometries if you will, and that would look
nothing
>> like what Mark has done, e.g. "thinks( he, really_likes( girlfriend,
>> him ) )".
>>
>>     I'll have to talk about this later.
>>
>> tomp
>>

--------------------------------
End of general-digest-list Digest V00 Issue #15
***********************************************




